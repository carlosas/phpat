#!/usr/bin/env php
<?php

declare(strict_types=1);

use PhpAT\App\Provider;
use PhpAT\Input\ArgvInput;
use Symfony\Component\DependencyInjection\ContainerBuilder;

try {
    $autoload = is_file(__DIR__.'/../../autoload.php')
        ? __DIR__.'/../../autoload.php'
        : __DIR__.'/vendor/autoload.php';
    require $autoload;

    $input = new ArgvInput();
    $isDryRun = $input->getOption('dry-run', false);
    $errStream = $isDryRun ? STDOUT : STDERR;
    $errCode = $isDryRun ? 0 : 1;

    if (PHP_VERSION_ID < 70200) {
        fwrite($errStream, 'Required at least PHP version 7.2.0 but your version is '.PHP_VERSION.PHP_EOL);
        exit($errCode);
    }

    error_reporting(E_ALL);
    ini_set('display_errors', $isDryRun ? 'stdout' : 'stderr');
    gc_disable();

    $container = new ContainerBuilder();
    $provider  = new Provider($container, $autoload, $input);
    $container = $provider->register();

    $app = $container->get('app');
    $result = $app->execute();
    exit($result === true ? 0 : 1);
} catch (\Throwable $e) {
    $redBgWhiteText = "\033[41m\033[1;37m";
    $formattingReset = "\033[0m";

    fwrite($errStream, sprintf(
        "%s\n\n\tAn error occurred while running phpat :(
        Please consider opening an issue: http://github.com/carlosas/phpat/issues\n%s\n",
        $redBgWhiteText,
        $formattingReset
    ));
    do {
        fwrite($errStream, sprintf(
            "\n%s\n\n%s",
            $e->getMessage(),
            $e->getTraceAsString()
        ));
    } while ($e = $e->getPrevious());
    exit($errCode);
}
